name: Build, lint and test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Libraries
  build_libs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [neural-network, genetic-algorithm, simulation, simulation-wasm]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.crate }}-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cd libs/${{ matrix.crate }}
      - uses: actions-rs/cargo@v1
        with:
          command: build

  lint_libs:
    runs-on: ubuntu-latest
    needs: build_libs
    strategy:
      matrix:
        crate: [neural-network, genetic-algorithm, simulation, simulation-was]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.crate }}-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cd libs/${{ matrix.crate }}
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -Dwarnings

  test_libs:
    runs-on: ubuntu-latest
    needs: build_libs
    strategy:
      matrix:
        crate: [neural-network, genetic-algorithm, simulation]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.crate }}-dev-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cd libs/${{ matrix.crate }}
      - uses: actions-rs/cargo@v1
        with:
          command: test
