name: Build, lint and test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Libraries
  build_libs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [neural-network, genetic-algorithm, simulation, simulation-wasm]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.crate }}-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cargo build
        run: |
          cd libs/${{ matrix.crate }}
          cargo build

  lint_libs:
    runs-on: ubuntu-latest
    needs: build_libs
    strategy:
      matrix:
        crate: [neural-network, genetic-algorithm, simulation, simulation-wasm]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.crate }}-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cargo clippy
        run: |
          cd libs/${{ matrix.crate }}
          cargo clippy --all-features -- -Dwarnings

  test_libs:
    runs-on: ubuntu-latest
    needs: build_libs
    strategy:
      matrix:
        crate: [neural-network, genetic-algorithm, simulation]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.crate }}-dev-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cargo test
        run: |
         cd libs/${{ matrix.crate }}
         cargo test

  deploy:
    runs-on: ubuntu-latest
    needs: [lint_libs, test_libs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-prod-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Build wasm
        run: |
          cd libs/simulation-wasm
          wasm-pack build --release
      - name: Install node modules and build website
        run: |
          cd www
          npm install
          npm run build
      - name: Deploy to pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./www/dist

